alias ls='ls --color=auto'
alias jsonlint='python -mjson.tool'
alias fopen='gnome-open'
alias docker-purge='docker stop $(docker ps -a -q) && docker rm $(docker ps -a -q)'
alias docker-purge-images="docker images | grep none | awk '{print $3}' | xargs docker rmi"
alias pypiupload='python setup.py sdist upload -r pypi'
alias gitbr='git for-each-ref --sort=-committerdate refs/heads/ --format="%(authordate:short)%09%(objectname:short)%09%1B[0;33m%(refname:short)%1B[m%09"'
alias gitprune='git branch --merged master | egrep -v master | xargs git branch -d'
alias gitlsr='for branch in `git branch -r | grep -v HEAD`;do echo -e `git show --format="%ai %ar by %an" $branch | head -n 1` \\t$branch; done | sort -r'

prompt_color() {
  echo "${COLOR_LIGHT_GREEN}"
}

for CONF in /etc/profile.d/*.sh; do
  [ -f "${CONF}" ] && source "${CONF}"
done

export GOPATH=$HOME/go
export PATH=$PATH:/usr/local/go/bin:$GOPATH/bin

_fab_completion()
{
    COMPREPLY=()

    local cur tasks

    tasks=$(fab --shortlist 2>/dev/null)
    _get_comp_words_by_ref cur
    COMPREPLY=( $(compgen -W "${tasks}" -- ${cur}) )
}
complete -F _fab_completion fab

_ssh_config() {
    local cur hosts
    hosts=$(grep "Host " ~/.ssh/config | cut -d' ' -f2)
    _get_comp_words_by_ref cur
    COMPREPLY=( $(compgen -W "${hosts}" -- ${cur}) )
}
complete -F _ssh_config -o nospace ssh

function parse_git_branch {
  git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/\1/'
}

function gbin { 
    echo branch \($1\) has these commits and \($(parse_git_branch)\) does not 
    git log ..$1 --no-merges --format='%h | Author:%an | Date:%ad | %s' --date=local
}

function gbout { 
    echo branch \($(parse_git_branch)\) has these commits and \($1\) does not 
    git log $1.. --no-merges --format='%h | Author:%an | Date:%ad | %s' --date=local
}

_manage_py_completion()
{
    COMPREPLY=()

    local cur tasks

    tasks=$(python manage.py | tail -n+2 | tr [:blank:] \\t | cut -f 3)
    _get_comp_words_by_ref cur
    COMPREPLY=( $(compgen -W "${tasks}" -- ${cur}) )
}
complete -F _manage_py_completion manage.py


function docker_purge_containers {
    docker stop $(docker ps -a -q)
    docker rm $(docker ps -a -q)
}

function docker_purge_images {
    docker stop $(docker ps -a -q)
    docker rm $(docker ps -a -q)
    docker rmi $(docker images -a -q)
}

function big_dirs {
    du -a $1 | sort -n -r | head -n 10
}
